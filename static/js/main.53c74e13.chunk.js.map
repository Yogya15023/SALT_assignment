{"version":3,"sources":["stores/UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","password","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","buttonDisabled","property","val","trim","length","setState","a","fetch","method","headers","Accept","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","App","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53c74e13.chunk.js","sourcesContent":["import { extendObservable } from \"mobx\";\r\n\r\nclass UserStore {\r\n  constructor() {\r\n    extendObservable(this, {\r\n      loading: true,\r\n      isLoggedIn: false,\r\n      username: \"\",\r\n      password: \"\",\r\n    });\r\n  }\r\n}\r\nexport default new UserStore();\r\n","import React from 'react';\r\n\r\n\r\nclass InputField extends React.Component {\r\n  render (){\r\n  return (\r\n    <div className=\"InputField\">\r\n     <input\r\n     className='input'\r\n     type={this.props.type}\r\n     placeholder={this.props.placeholder}\r\n     value={this.props.value}\r\n     onChange={(e)=>this.props.onChange(e.target.value)}\r\n     />\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\n\r\n\r\nclass SubmitButton extends React.Component {\r\n  render (){\r\n  return (\r\n    <div className=\"SubmitButton\">\r\n     <button\r\n       className='btn'\r\n       disabled={this.props.disabled}\r\n       onClick={() => this.props.onClick() }\r\n       >\r\n         {this.props.text}\r\n     </button>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default SubmitButton;","import React from \"react\";\r\nimport InputField from \"./InputField\";\r\nimport SubmitButton from \"./SubmitButton\";\r\nimport UserStore from \"./stores/UserStore\";\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      buttonDisabled: false,\r\n    };\r\n  }\r\n  setInputValue(property, val) {\r\n    val = val.trim();\r\n    if (val.length > 25) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]: val,\r\n    });\r\n  }\r\n  resetForm() {\r\n    this.setState({\r\n      username: \"\",\r\n      buttonDisabled: false,\r\n    });\r\n  }\r\n  async doLogin() {\r\n    if (!this.state.username) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      buttonDisabled: true,\r\n    });\r\n    try {\r\n      let res = await fetch(\"/login\", {\r\n        method: \"post\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username: this.state.username,\r\n        }),\r\n      });\r\n      let result = await res.json();\r\n      if (result && result.success) {\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = result.username;\r\n      } else if (result && result.success === false) {\r\n        this.resetForm();\r\n        alert(result.msg);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.resetForm();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"LoginForm\">\r\n        SALT Login Form\r\n        <InputField\r\n          type=\"email\"\r\n          placeholder=\"Username\"\r\n          value={this.state.username ? this.state.username : \"\"}\r\n          onChange={(val) => this.setInputValue(\"username\", val)}\r\n        />\r\n        <InputField\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={this.state.password ? this.state.password : \"\"}\r\n          onChange={(val) => this.setInputValue(\"password\", val)}\r\n        />\r\n        <SubmitButton\r\n          text=\"Login\"\r\n          disabled={this.state.buttonDisabled}\r\n          onClick={() => this.doLogin()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport './App.css';\nimport UserStore from './stores/UserStore';\nimport LoginForm from './LoginForm';\nimport SubmitButton from './SubmitButton'; \nclass App extends React.Component {\n  async componentDidMount() {\n    try {\n  let res = await fetch('/isLoggedIn',{\n    method:'post',\n    headers:{\n      'Accept':'application/json',\n      'content-Type':'application/json'\n    }\n  });\n  let result = await res.json();\n  if(result && result.success){\n    UserStore.loading=false;\n    UserStore.isLoggedIn=true;\n    UserStore.username=result.username;\n  }\n  else{\n    UserStore.loading=false;\n    UserStore.isLoggedIn=false;\n\n  }\n\n    }\n    catch(e) {\n UserStore.loading=false;\n    UserStore.isLoggedIn=false;\n    }\n  }\n  async doLogout() {\n    try {\n  let res = await fetch('/logout',{\n    method:'post',\n    headers:{\n      'Accept':'application/json',\n      'content-Type':'application/json'\n    }\n  });\n  let result = await res.json();\n  if(result && result.success){\n    UserStore.isLoggedIn=false;\n    UserStore.username='';\n  }\n    }\n    catch(e) {\n console.log(e)\n    }\n  }\n  render (){\n    if(UserStore.loading){\n      return (<div className=\"app\">\n      <div\n    \n        className='container'>\n          Loading..Please Wait.\n      </div>\n     </div>);\n    }\n    else{\n      if(UserStore.isLoggedIn){\n        return (<div className=\"app\">\n        <div\n          className='container'>\n            Welcome {UserStore.username}\n\n            <SubmitButton\n              text={'Logout'}\n              disabled={false}\n              onClick={() => this.doLogout()}\n              />\n        </div>\n       </div>);\n      }\n  return (\n    <div className=\"app\">\n      <div\n          className='container'>\n            <LoginForm/>\n          </div>\n    </div>\n  );\n    }\n}\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}